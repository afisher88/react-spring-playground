{"version":3,"file":"static/webpack/static\\development\\pages\\update.js.bcd03623f1e76148a443.hot-update.js","sources":["webpack:///./components/TableWithSidepane/Sidepane.js","webpack:///./components/TableWithSidepane/TableWithSidepane.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst openConfigEnter = {};\r\nconst openConfigLeave = {};\r\nconst updateConfigEnter = {};\r\nconst updateConfigLeave = {};\r\n\r\nexport default function Sidepane({ activeRowIndex, tableData }) {\r\n  return (\r\n    <Transition\r\n      native\r\n      items={activeRowIndex}\r\n      from={{ opacity: 0 }}\r\n      enter={[{ opacity: 1 }]}\r\n      leave={[{ opacity: 0 }]}\r\n      config={config.slow}\r\n    >\r\n      {activeRowIndex =>\r\n        typeof activeRowIndex === 'number' && (props => (\r\n          <animated.div className=\"sidepane-animation-container\" style={props}>\r\n            <article className=\"sidepane\">\r\n              <h2>{tableData[activeRowIndex].name}</h2>\r\n              <p>{`${tableData[activeRowIndex].name} is a ${tableData[activeRowIndex].age} year old ${tableData[activeRowIndex].job} living in ${tableData[activeRowIndex].location}.`}</p>\r\n            </article>\r\n          </animated.div>)\r\n        )\r\n      }\r\n    </Transition>\r\n  )\r\n}\r\n","import React, { PureComponent } from 'react';\r\n// import { capitalize } from 'lodash-es';\r\nimport tableData from './TableData';\r\nimport Sidepane from './Sidepane';\r\nimport { animated, config, Transition } from 'react-spring';\r\nimport './Sidepane.scss';\r\n\r\nexport class TableWithSidepane extends PureComponent {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      activeRowIndex: null\r\n    }\r\n  }\r\n\r\n  setActiveRowIndex = (rowIndex) => {\r\n    this.setState({\r\n      activeRowIndex: rowIndex\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { activeRowIndex } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className=\"u-full-width\">\r\n          <thead>\r\n            <tr>\r\n              {tableData.map((row, i) => {\r\n                return (\r\n                  <th key={`table-heading-${i}`}>{Object.keys(row)[i]}</th>\r\n                )\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData.map((row, i) => {\r\n              return (\r\n                <tr key={`table-row-${i}`}>\r\n                  <td>{row.name}</td>\r\n                  <td>{row.job}</td>\r\n                  <td><button type=\"button\" onClick={this.setActiveRowIndex.bind(this, i)}>Show more info for {row.name}</button></td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AADA;AAGA;AACA;AAVA;AACA;AADA;AAHA;AAMA;AACA;AARA;AAAA;AAAA;AAeA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAOA;AA9CA;AACA;AADA;AAAA;;;;A","sourceRoot":""}